services:
  app:
    build: .
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    tty: true
    stdin_open: true
    restart: always
    depends_on:
      - guardian_db
      - redis
  guardian_db:
    image: postgres:17
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5435:5432"
  redis:
    image: redis:7
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
  celery_worker:
    build: .
    command: celery -A celery_app worker --loglevel=info
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      guardian_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    tty: true
    stdin_open: true
  celery_beat:
    build: .
    command: celery -A celery_app beat --loglevel=info --scheduler celery.beat.PersistentScheduler
    env_file:
      - .env
    volumes:
      - ./celerybeat-schedule:/var/celery
    depends_on:
      guardian_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

volumes:
  postgres_data:
  redis_data: